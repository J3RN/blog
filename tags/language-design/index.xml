<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>language design on J3RN's Blog</title><link>http://j3rn.com/tags/language-design/</link><description>Recent content in language design on J3RN's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://j3rn.com/tags/language-design/index.xml" rel="self" type="application/rss+xml"/><item><title>Object Orientation and the Limits of Metaphor</title><link>http://j3rn.com/posts/object-orientation-limits-of-metaphor/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>http://j3rn.com/posts/object-orientation-limits-of-metaphor/</guid><description>Roughly ten years ago, I was very excited about object orientation. Which made me somewhat late to the party; glowing pronouncements of how object orientation was going to solve the software complexity crisis had flooded industry publications some two decades prior. Regardless, in 2014, I was trying to explain to a friend why objects were so grand.
&amp;ldquo;Objects model the real world,&amp;rdquo; I said, grabbing a pencil off the table and holding it up.</description></item><item><title>Readability vs Comprehensibility</title><link>http://j3rn.com/posts/readability-vs-comprehensibility/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><guid>http://j3rn.com/posts/readability-vs-comprehensibility/</guid><description>For me, clarity is composed of two smaller ideas: readability and comprehensibility. Neither of these words have widely-accepted definitions in software engineering, so for the purposes of this article, I will define them like so:
readability ability for a reader to recognize the syntactic constructs in a body of code. comprehensibility ability for a reader to discern the what a body of code does at a high level. Readability #The LISP family of programming languages have reached the pinnacle of readability.</description></item><item><title>Focusing on What Matters</title><link>http://j3rn.com/posts/focusing-on-what-matters/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>http://j3rn.com/posts/focusing-on-what-matters/</guid><description>In an introductory computer science course, our professor instructed us:
Don&amp;rsquo;t become attached to any IDE, text editor, programming language, or operating system. This field is young and constantly evolving; you don&amp;rsquo;t want to be left behind.
I don&amp;rsquo;t think I realized at that time what tremendously insightful advice this was. At that time I was primarily writing Java in Eclipse. Over the next few years I would work professionally in PHP and Ruby and then migrate to Elixir.</description></item></channel></rss>