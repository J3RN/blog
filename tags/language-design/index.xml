<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Language Design on J3RN's Blog</title><link>http://j3rn.com/tags/language-design/</link><description>Recent content in Language Design on J3RN's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 13 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://j3rn.com/tags/language-design/index.xml" rel="self" type="application/rss+xml"/><item><title>Object Orientation and the Limits of Metaphor</title><link>http://j3rn.com/posts/object-orientation-limits-of-metaphor/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>http://j3rn.com/posts/object-orientation-limits-of-metaphor/</guid><description>&lt;p>Roughly ten years ago, I was very excited about object orientation. Which made me somewhat late to the party; glowing pronouncements of how object orientation was going to solve the software complexity crisis had flooded industry publications some two decades prior. Regardless, in 2014, I was trying to explain to a friend why objects were so grand.&lt;/p>
&lt;p>&amp;ldquo;Objects model the real world,&amp;rdquo; I said, grabbing a pencil off the table and holding it up. &amp;ldquo;For instance, I could create a Pencil class, representing the Platonic idea of Pencil, and this would be an instance of it.&amp;rdquo; I, like any modern person, did not actually subscribe to Platonism. &amp;ldquo;And it&amp;rsquo;s able to &lt;em>do&lt;/em> stuff, which we refer to as &amp;lsquo;methods&amp;rsquo;. For instance,&amp;rdquo; I said, scribbling on a piece of paper, &amp;ldquo;it might have a &amp;lsquo;write&amp;rsquo; method, for writing things.&amp;rdquo;&lt;/p></description></item><item><title>Readability vs Comprehensibility</title><link>http://j3rn.com/posts/readability-vs-comprehensibility/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><guid>http://j3rn.com/posts/readability-vs-comprehensibility/</guid><description>&lt;p>For me, clarity is composed of two smaller ideas: &lt;em>readability&lt;/em> and &lt;em>comprehensibility&lt;/em>. Neither of these words have widely-accepted definitions in software engineering, so for the purposes of this article, I will define them like so:&lt;/p>
&lt;dl>
&lt;dt>readability&lt;/dt>
&lt;dd>ability for a reader to recognize the syntactic constructs in a body of code.&lt;/dd>
&lt;dt>comprehensibility&lt;/dt>
&lt;dd>ability for a reader to discern the what a body of code does at a high level.&lt;/dd>
&lt;/dl>
&lt;h2 id="readability" class="relative group">Readability &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#readability" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>The LISP family of programming languages have reached the pinnacle of &lt;em>readability&lt;/em>.&lt;/p></description></item><item><title>Focusing on What Matters</title><link>http://j3rn.com/posts/focusing-on-what-matters/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>http://j3rn.com/posts/focusing-on-what-matters/</guid><description>&lt;p>Update 2025-07-12: I merged two sections, Stability and Availability, into one section, Usability, that also encompasses topics such as accessibility. I also updated some paragraph structures and removed the intro because it was weak.&lt;/p>
&lt;h1 id="what-matters" class="relative group">What matters? &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#what-matters" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h1>&lt;p>The reason that we write software in the first place is to create solutions to problems&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Around the world, every day people face problems that can be solved by computers. A person might want to know &amp;ldquo;What are the chances it will rain tomorrow?&amp;rdquo; A statistical model can provide a reasonable estimate. A person might want to know &amp;ldquo;If I have a loan at 3%, how much will I pay in interest over the term of the loan?&amp;rdquo; Accounting software can answer this question.&lt;/p></description></item></channel></rss>