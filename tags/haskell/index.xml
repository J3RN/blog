<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>haskell on J3RN's Blog</title><link>http://j3rn.com/tags/haskell/</link><description>Recent content in haskell on J3RN's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Oct 2021 10:21:19 -0400</lastBuildDate><atom:link href="http://j3rn.com/tags/haskell/index.xml" rel="self" type="application/rss+xml"/><item><title>Truly Declarative: Logic Programming</title><link>http://j3rn.com/posts/2021-10-30-truly-declarative-logic-programming/</link><pubDate>Sat, 30 Oct 2021 10:21:19 -0400</pubDate><guid>http://j3rn.com/posts/2021-10-30-truly-declarative-logic-programming/</guid><description>While reading through Miran Lipovaƒça&amp;rsquo;s excellent Learn You a Haskell, I came across the following problem:
Which right triangle that has integers for all sides and all sides equal to or smaller than 10 has a perimeter of 24?
To demonstrate some properties of different programming languages, I&amp;rsquo;ll solve this problem in three languages embodying three different paradigms:
C (imperative and procedural) Haskell (functional) Prolog (logic and constraint) C üîóThe general approach I&amp;rsquo;ll be taking here is to generate every set of possible lengths fitting the constraints (namely being integers between 1 and 10) and then check to see if the other two conditions are met (being a right triangle, having a perimeter of 24).</description></item></channel></rss>