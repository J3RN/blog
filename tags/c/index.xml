<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c on J3RN's Blog</title><link>http://j3rn.com/tags/c/</link><description>Recent content in c on J3RN's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 04 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://j3rn.com/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Readability vs Comprehensibility</title><link>http://j3rn.com/posts/readability-vs-comprehensibility/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><guid>http://j3rn.com/posts/readability-vs-comprehensibility/</guid><description>For me, clarity is composed of two smaller ideas: readability and comprehensibility. Neither of these words have widely-accepted definitions in software engineering, so for the purposes of this article, I will define them like so:
readability ability for a reader to recognize the syntactic constructs in a body of code. comprehensibility ability for a reader to discern the what a body of code does at a high level. Readability #The LISP family of programming languages have reached the pinnacle of readability.</description></item></channel></rss>